// Доработайте модуль для отрисовки фотографий так, чтобы в качестве данных использовались не случайно сгенерированные объекты, а те данные, которые вы загрузите с удалённого сервера.

import {renderPhotos} from './minis.js';
import {setUserFormSubmit} from './form.js';
import {closeBigPhoto} from './zoom.js';

let photos;

function convertToJSON (response) {
  return response.json();
}

function savePhotos (result) {
  photos = result;
  return result;
}

fetch('https://25.javascript.pages.academy/kekstagram/data')
  .then(convertToJSON)
  .then(savePhotos)
  .then(renderPhotos);

setUserFormSubmit(closeBigPhoto);

// Добавьте обработку возможных ошибок при загрузке.

// Отправка данных

// Сейчас наша форма работает просто: при нажатии на кнопку «Опубликовать» происходит перенаправление на адрес, указанный в атрибуте action. Это не совсем удобно, и если оставить всё как есть, пользователю придётся самостоятельно возвращаться назад. Стоит ли говорить, что это далеко не оптимальное решение. Поэтому данные из формы мы будем передавать с помощью AJAX.

// Добавьте обработчик отправки формы, если ещё этого не сделали, который бы отменял действие формы по умолчанию и отправлял данные формы посредством fetch на сервер.

// Реализуйте возвращение формы в исходное состояние при успешной отправке, а также показ сообщения пользователю.

// Если при отправке данных произошла ошибка запроса, покажите соответствующее сообщение.

// Доработайте обработчик закрытия формы, чтобы кроме закрытия формы он сбрасывал введённые пользователем данные и возвращал форму в исходное состояние. Аналогичным образом обработайте нажатие на кнопку сброса.

export {photos};
